#ifndef BITMAP_H
#define BITMAP_H

#include <string>
#include "math3d.h"

class Bitmap
{
public:
	Bitmap(const std::string& fileName);
	Bitmap(int width = 32, int height = 32);
	
	void Save(const std::string& fileName);
	void DrawPixel(unsigned int x, unsigned int y, const Vector3f& color);
	
	inline int GetWidth() const { return m_width; }
	inline int GetHeight() const { return m_height; }
	inline const int* GetPixels() const { return m_image; }
	
	virtual ~Bitmap();
protected:
private:
	Bitmap(const Bitmap& bitmap) {}
	void operator=(const Bitmap& bitmap) {}

	int* m_image;
	int m_width;
	int m_height;
};

#endif
